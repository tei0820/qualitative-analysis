MODULE main
 VAR
------- Controlled variables --------
	serverLoad:{low, notLow};
	responseTime:{fast, notFast};
	QoC:{high, notHigh};
------- Tactics --------
	actionEVP1: {increment,decrement,none};
	actionEVP2: {switchToHigh,switchToLow,none};
	actionEVP3: {switchToFast,switchToSlow,none};
	actionEVP4: {switchToMM,switchToText,none};
------- E ----------
	sSMe: severLoadSM(serverLoad,actionEVP1,actionEVP2);
	rSMe: responseTimeSM(responseTime,actionEVP2,actionEVP3,actionEVP4);
	qSMe: QoSSM(QoC,actionEVP4);
------- S ----------
	d1: Dummy(actionEVP1);
	d2: Dummy(actionEVP2);
  d3: Dummy(actionEVP3);
  al4: AL4(QoC,responseTime,actionEVP4);

 ASSIGN
------ Current values of controlled variables
	init(serverLoad) := notLow;
	init(responseTime) := notFast;
	init(QoC) := high;

	init(actionEVP1) := none;
	init(actionEVP2) := none;
	init(actionEVP3) := none;
	init(actionEVP4) := none;

-- The desired level of the quality attributes
SPEC EF(serverLoad=low & responseTime=fast & QoC=high);

---- E -----
MODULE severLoadSM(serverLoad,actionEVP1,actionEVP2)
 ASSIGN
	next(serverLoad):=
		case
		 serverLoad=notLow & actionEVP1=decrement : notLow;
		 serverLoad=notLow & actionEVP1=increment : {low,notLow};
		 serverLoad=low & actionEVP1=decrement : {low,notLow};
		 serverLoad=low & actionEVP1=increment : low;

		 serverLoad=notLow & actionEVP2=switchToLow : {low,notLow};
		 serverLoad=notLow & actionEVP2=switchToHigh : notLow;
		 serverLoad=low & actionEVP2=switchToLow : low;
		 serverLoad=low & actionEVP2=switchToHigh : {low,notLow};
		 TRUE:	serverLoad;
		esac;
MODULE responseTimeSM(responseTime,actionEVP2,actionEVP3,actionEVP4)
 ASSIGN
	next(responseTime):=
		case
		 responseTime=fast & actionEVP2=switchToLow : {fast,notFast};
		 responseTime=fast & actionEVP2=switchToHigh : fast;
		 responseTime=notFast & actionEVP2=switchToLow : notFast;
		 responseTime=notFast & actionEVP2=switchToHigh : {fast,notFast};

		 responseTime=fast & actionEVP3=switchToFast : fast;
		 responseTime=fast & actionEVP3=switchToSlow : {fast,notFast};
		 responseTime=notFast & actionEVP3=switchToFast : {fast,notFast};
		 responseTime=notFast & actionEVP3=switchToSlow : notFast;

		 responseTime=fast & actionEVP4=switchToMM: {fast,notFast};
		 responseTime=fast & actionEVP4=switchToText: fast;
		 responseTime=notFast & actionEVP4=switchToMM: notFast;
		 responseTime=notFast & actionEVP4=switchToText: {fast,notFast};

		 TRUE : responseTime;
		esac;
MODULE QoSSM(QoC,actionEVP4)
 ASSIGN
	next(QoC):=
		case
		 QoC=high & actionEVP4=switchToMM : high;
		 QoC=high & actionEVP4=switchToText : notHigh;
		 QoC=notHigh & actionEVP4=switchToMM : high;
		 QoC=notHigh & actionEVP4=switchToText : notHigh;
		 TRUE : QoC;
		esac;

---- S -----
MODULE AL4(QoC,responseTime,action)
  VAR
    contentType:{MM,text};
  ASSIGN
    init(contentType):=MM;
    next(contentType):=
      case
      	contentType=MM & action=switchToMM : MM;
      	contentType=MM & action=switchToText : text;
       	contentType=text & action=switchToMM : MM;
        contentType=text & action=switchToText : text;
      	TRUE : contentType;
      esac;
    next(action):=
      case
        contentType=MM & QoC=high & responseTime=fast : none;
      	contentType=text & QoC=notHigh & responseTime=fast : switchToMM;
      	contentType=MM & QoC=high & responseTime=notFast : switchToText;
      	contentType=text & QoC=notHigh & responseTime=notFast : none;
      	TRUE : action;
      esac;
MODULE Dummy(action)
  ASSIGN
    next(action):=
      case
        TRUE:	action;
      esac;
